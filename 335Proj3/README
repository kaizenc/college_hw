# Assignment 3

by Kaizen Castanos

for CS 335 taught by Prof. Stewart Weiss

## How to run

Type "make" in the command line. It should output to a compiled "project 3" file. Then type:

./project3 subway\_entrance_data.csv commands

## Running Log

### Monday, April 16

Began the subway project, mainly just getting the header files finished and cleaned up

### Thursday, April 19

Began writing down functions and the way classes should be organized. I'm starting to get an understanding of how these classes talk to each other.

### Thursday, May 3

Slow progress, just writing down the easy parts of the code (get functions, subway_entrance constructor) so I'm not completely lost when I work on this project later.

### Thursday, May 10

Haven't been coding much, but I finished up subway_entrance. A lot of work is being done drawing up diagrams just understanding what I need to code.

I do know that comparing lines using bitmasks is as simple as ANDing two masks together and ensuring the result is greater than one. I need a line hash function before I make the masks.

### Saturday, May 12

The lines are, in order:

1, 2, 3, 4, 5, 6, 7, A, B, C, D, E, F, FS, G, GS, H, J, L, M, N, Q, R, S, SIR, Z

I created a hash function by converting the string using Horner's rule, then modding it by a value. I found out the correct value to mod by so that there were no collisions by writing it up in python before translating the hash function to c++.

### Sunday, May 13
I thought I was close until I realized I messed up some of the ideas I had for this project.
First off, I forgot the third requirement of having an entrance: if two entrances are connected to the same entrance, they're in the same set.

As well, I needed to find a good way to get the entrances of a station, so I'm thinking I actually do need to make a subway_station class to hold the entrances, as well as the centroid.

### Monday, May 14
I ended up doing abandoning the subway_station class. I'd rather put the longitudes and latitudes of the stations in separate vectors and access them by knowing that the index in the entrances vector is the same as the index in the longitudes/latitudes vectors.
 

Finally finished. I couldn't end up getting the correct number of stations, however. And there are a lot of algorithms and methods I used that are less than ideal. 